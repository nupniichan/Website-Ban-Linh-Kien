@using Website_Ban_Linh_Kien.Models
@model ProductCardViewModel
@{
    var defaultId = "default-product";
    var defaultName = "Sản phẩm mẫu";
    var defaultPrice = 0M;
    var defaultImage = "https://via.placeholder.com/300x200";
}

<div class="bg-white rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 w-56 flex-shrink-0 border-gray-900" style="scroll-snap-align: start;">
    @{
        var productUrl = Model?.LoaiSp?.ToLower() switch
        {
            "pc" => $"/pc/{Model?.IdSp ?? defaultId}",
            "laptop" => $"/laptop/{Model?.IdSp ?? defaultId}",
            "components" => $"/components/{Model?.IdSp ?? defaultId}",
            "storage" => $"/storage/{Model?.IdSp ?? defaultId}",
            "monitor" => $"/monitor/{Model?.IdSp ?? defaultId}",
            "speaker" or "microphone" or "webcam" => 
                $"/audio/{Model.LoaiSp}/{Model?.IdSp ?? defaultId}",
            "keyboard" or "mouse" or "headphone" => 
                $"/peripherals/{Model.LoaiSp}/{Model?.IdSp ?? defaultId}",
            "network" => $"/network/{Model?.IdSp ?? defaultId}",
            _ => "#"
        };
    }
    <a href="@productUrl" class="block h-full">
        <div class="p-3 flex flex-col h-full">
            <img src="@(Model?.ImageUrl ?? defaultImage)" alt="Product Image" class="w-full h-40 object-cover rounded-lg" loading="lazy" onerror="this.onerror=null; this.src='/imgs/default-product.jpg';">
            <div class="relative group flex-grow">
                <h3 class="text-base font-semibold mt-3 product-title overflow-hidden h-12 line-clamp-2"
                    data-full-text="@(Model?.TenSp ?? defaultName)">
                </h3>
                <div class="absolute left-0 -top-12 bg-black text-white text-xs rounded-lg px-2 py-1 opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-10 whitespace-nowrap product-tooltip">
                </div>
            </div>
            <p class="text-red-600 font-bold text-xl my-3">@((Model?.Gia ?? defaultPrice).ToString("N0"))đ</p>
            <button class="w-full hover:opacity-80 transition-opacity duration-300 mt-auto">
                <div class="flex items-center gap-2">
                    <div class="bg-[#0066CC] p-2 rounded-full">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                        </svg>
                    </div>
                    <span class="text-gray-700">Thêm vào giỏ hàng</span>
                </div>
            </button>
        </div>
    </a>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        function updateProductTitles() {
            const titles = document.querySelectorAll('.product-title');            
            titles.forEach((title, index) => {
                const fullText = title.getAttribute('data-full-text');
                
                title.textContent = fullText;
                
                if (fullText && fullText.length > 70) {
                    const truncatedText = fullText.substring(0, 70) + '...';
                    title.textContent = truncatedText;
                }
                
                const tooltip = title.closest('.group').querySelector('.product-tooltip');
                tooltip.textContent = fullText;
            });
        }

        updateProductTitles();
        setTimeout(updateProductTitles, 500);
    });
</script>
