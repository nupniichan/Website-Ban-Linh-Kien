@model ProductSectionViewModel

<div class="bg-white rounded-lg p-4 relative" data-section="@Model.Title">
    <div class="flex justify-between items-center mb-4">
        <h2 class="text-2xl font-bold">@Model.Title</h2>
        <a href="@Model.ViewAllLink" class="text-blue-600 hover:underline">Xem tất cả</a>
    </div>
    
    <div class="products-container flex gap-4 overflow-x-auto pb-4 scrollbar-hide" style="scroll-snap-type: x mandatory;">
        @if (Model.Products != null && Model.Products.Any())
        {
            foreach (var product in Model.Products)
            {
                <partial name="_ProductCard" model="product" />
            }
        }
        else
        {
            <div class="text-center py-8">
                <p class="text-gray-500">Không có sản phẩm nào trong danh mục này</p>
            </div>
        }
    </div>

    @if (Model.Products != null && Model.Products.Any())
    {
        <button class="absolute left-2 top-1/2 -translate-y-1/2 bg-white/50 hover:bg-white/80 p-2 rounded-full shadow-lg backdrop-blur-sm transition-all duration-300 group" onclick="slideProducts('@Model.Title', 'prev')">
            <svg class="w-6 h-6 text-gray-700 group-hover:text-gray-900" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        <button class="absolute right-2 top-1/2 -translate-y-1/2 bg-white/50 hover:bg-white/80 p-2 rounded-full shadow-lg backdrop-blur-sm transition-all duration-300 group" onclick="slideProducts('@Model.Title', 'next')">
            <svg class="w-6 h-6 text-gray-700 group-hover:text-gray-900" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>
    }
</div>

<script>
    function slideProducts(sectionTitle, direction) {
        const container = document.querySelector(`[data-section="${sectionTitle}"] .products-container`);
        if (!container) return;

        const cardWidth = 224; // width of product card
        const gap = 16; // gap between cards
        const scrollAmount = cardWidth + gap;
        
        if (direction === 'next') {
            if (container.scrollLeft + container.clientWidth >= container.scrollWidth - scrollAmount) {
                container.scrollTo({ left: 0, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
            }
        } else {
            if (container.scrollLeft === 0) {
                container.scrollTo({ left: container.scrollWidth, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
            }
        }
    }
</script>