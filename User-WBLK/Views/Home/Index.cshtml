@using Website_Ban_Linh_Kien.Models
@model List<ProductCardViewModel>
@{
    ViewData["Title"] = "Trang chủ";
}

<div class="container mx-auto px-4">
    <!-- Main Banner -->
    <div class="w-full mb-6">
        <img src="/imgs/banners/XUAN2025.jpg" alt="Main Banner" class="w-full object-cover rounded-lg" loading="lazy">
    </div>

    <!-- Sub Banners -->
    <div class="relative mb-10">
        <div class="grid grid-cols-2 gap-6">
            <div class="overflow-hidden rounded-lg drop-shadow border-gray-200">
                <img src="/imgs/banners/RTXEVENT.jpg" alt="Sub Banner 1" class="w-full object-fill" loading="lazy">
            </div>
            <div class="overflow-hidden rounded-lg drop-shadow border-gray-200">
                <img src="/imgs/banners/RTXLAPTOPEVENT.jpg" alt="Sub Banner 2" class="w-full object-fill" loading="lazy">
            </div>
        </div>

        <button class="absolute left-2 top-1/2 -translate-y-1/2 bg-white/50 p-2 rounded-full hover:bg-white/80 transition-colors" onclick="slideBanners('prev')">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        <button class="absolute right-2 top-1/2 -translate-y-1/2 bg-white/50 p-2 rounded-full hover:bg-white/80 transition-colors" onclick="slideBanners('next')">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>
    </div>

    <!-- Hot Products Section -->
    <div class="mb-10">
        <div class="bg-gradient-to-r from-[#FB3C3C] to-[#EAFC40] rounded-lg p-4 relative">
            <h2 class="text-2xl font-bold mb-4 text-white">Sản phẩm được xem nhiều nhất ⚡</h2>
            
            <div class="products-container flex gap-4 overflow-x-auto pb-4 scrollbar-hide" style="scroll-snap-type: x mandatory;">
                @if (Model != null && Model.Any())
                {
                    @foreach (var product in Model)
                    {
                        <partial name="_ProductCard" model="product" />
                    }
                }
                else
                {
                    <div class="text-white">Không có sản phẩm nào.</div>
                }
            </div>

            <button class="absolute left-2 top-1/2 -translate-y-1/2 bg-white/50 p-2 rounded-full hover:bg-white/80 transition-colors" onclick="slideHotProducts('prev')">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                </svg>
            </button>
            <button class="absolute right-2 top-1/2 -translate-y-1/2 bg-white/50 p-2 rounded-full hover:bg-white/80 transition-colors" onclick="slideHotProducts('next')">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
            </button>
        </div>
    </div>

    <!-- Other Product Sections -->
    <div class="space-y-10">
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "PC - Máy tính cá nhân", 
            ViewAllLink = "/productslist/pc",
            Products = ViewBag.PCProducts 
        }' />
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "Laptop", 
            ViewAllLink = "/productslist/laptop",
            Products = ViewBag.LaptopProducts 
        }' />
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "CPU - Bộ vi xử lý", 
            ViewAllLink = "/productslist/components/cpu",
            Products = ViewBag.CPUProducts 
        }' />
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "VGA - Card màn hình", 
            ViewAllLink = "/productslist/components/vga",
            Products = ViewBag.VGAProducts 
        }' />
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "RAM - Bộ nhớ", 
            ViewAllLink = "/productslist/components/ram", 
            Products = ViewBag.RAMProducts 
        }' />
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "Mainboard - Bo mạch chủ", 
            ViewAllLink = "/productslist/components/mainboard",
            Products = ViewBag.MainboardProducts 
        }' />
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "Màn hình máy tính", 
            ViewAllLink = "/productslist/monitor",
            Products = ViewBag.MonitorProducts 
        }' />
        <partial name="_ProductSection" model='new ProductSectionViewModel { 
            Title = "Thiết bị lưu trữ", 
            ViewAllLink = "/productslist/storage",
            Products = ViewBag.StorageProducts
        }' />
    </div>

    <!-- Why Choose Us Section -->
    <div class="my-16 bg-gray-50 w-screen relative left-[50%] right-[50%] ml-[-50vw] mr-[-50vw]">
        <div class="container mx-auto px-4 md:px-8 lg:px-28">
            <h2 class="text-2xl font-bold text-center mb-10 text-blue-600 pt-8">Vì sao nên chọn chúng tôi?</h2>
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8 pb-8">
                <div class="flex items-center space-x-4 h-full">
                    <div class="bg-white p-4 rounded-full shadow-md flex-shrink-0">
                        <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                        </svg>
                    </div>
                    <div class="flex-grow">
                        <h3 class="font-semibold">Chính sách giao hàng</h3>
                        <p class="text-gray-600 text-sm">Nhanh chóng và thanh toán tại nhà</p>
                    </div>
                </div>
                
                <div class="flex items-center space-x-4 h-full">
                    <div class="bg-white p-4 rounded-full shadow-md flex-shrink-0">
                        <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                    </div>
                    <div class="flex-grow">
                        <h3 class="font-semibold">Đổi trả dễ dàng</h3>
                        <p class="text-gray-600 text-sm">1 đổi 1 trong 15 ngày</p>
                    </div>
                </div>
                
                <div class="flex items-center space-x-4 h-full">
                    <div class="bg-white p-4 rounded-full shadow-md flex-shrink-0">
                        <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                        </svg>
                    </div>
                    <div class="flex-grow">
                        <h3 class="font-semibold">Thanh toán tiện lợi</h3>
                        <p class="text-gray-600 text-sm">Tiền mặt, chuyển khoản, trả góp 0%</p>
                    </div>
                </div>
                
                <div class="flex items-center space-x-4 h-full">
                    <div class="bg-white p-4 rounded-full shadow-md flex-shrink-0">
                        <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z" />
                        </svg>
                    </div>
                    <div class="flex-grow">
                        <h3 class="font-semibold">Hỗ trợ nhiệt tình</h3>
                        <p class="text-gray-600 text-sm">Tư vấn, giải đáp mọi thắc mắc</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .scrollbar-hide::-webkit-scrollbar {
        display: none;
    }
    .scrollbar-hide {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
    
    .products-container {
        scroll-behavior: smooth;
    }
</style>

<script>
    let currentLeftIndex = 0;
    let currentRightIndex = 1;
    const bannerImages = [
        '/imgs/banners/RTXEVENT.jpg',
        '/imgs/banners/RTXLAPTOPEVENT.jpg',
    ];

    function slideBanners(direction) {
        if (direction === 'next') {
            currentLeftIndex = (currentLeftIndex + 1) % bannerImages.length;
            currentRightIndex = (currentRightIndex + 1) % bannerImages.length;
        } else {
            currentLeftIndex = currentLeftIndex === 0 ? bannerImages.length - 1 : currentLeftIndex - 1;
            currentRightIndex = currentRightIndex === 0 ? bannerImages.length - 1 : currentRightIndex - 1;
        }
        
        const bannerElements = document.querySelectorAll('.grid img');
        bannerElements[0].src = bannerImages[currentLeftIndex];
        bannerElements[1].src = bannerImages[currentRightIndex];
    }

    function slideHotProducts(direction) {
        const container = document.querySelector('.products-container');
        if (!container) return;

        const cardWidth = 224; // 56 (w-56) * 4 pixels
        const gap = 16; // gap between cards
        const scrollAmount = cardWidth + gap;
        
        if (direction === 'next') {
            if (container.scrollLeft + container.clientWidth >= container.scrollWidth - scrollAmount) {
                container.scrollTo({ left: 0, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
            }
        } else {
            if (container.scrollLeft === 0) {
                container.scrollTo({ left: container.scrollWidth, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
            }
        }
    }

    let autoScrollInterval;

    function startAutoScroll() {
        autoScrollInterval = setInterval(() => {
            slideHotProducts('next');
        }, 5000); 
    }

    function stopAutoScroll() {
        clearInterval(autoScrollInterval);
    }

    document.addEventListener('DOMContentLoaded', () => {
        startAutoScroll();
        
        const container = document.querySelector('.products-container');
        container.addEventListener('mouseenter', stopAutoScroll);
        container.addEventListener('mouseleave', startAutoScroll);
    });
</script>
