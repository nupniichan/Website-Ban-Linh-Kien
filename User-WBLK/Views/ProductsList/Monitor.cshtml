@model ProductListViewModel
@{
    ViewData["Title"] = "Màn hình";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mx-auto px-4">
    <!-- Filters -->
    <div class="bg-white rounded-lg p-4">
        <div class="mb-4">
            <h2 class="font-semibold mb-2">Chọn theo tiêu chí:</h2>
            <div class="flex flex-wrap gap-2">
                <!-- Thương hiệu -->
                <div class="relative">
                    <select class="px-4 py-2 border rounded-md w-48" onchange="window.location.href=this.value">
                        @{
                            var defaultUrl = Url.Action("Monitor", "ProductsList", new { size = Model.Size, resolution = Model.Resolution, refreshRate = Model.RefreshRate, priceRange = Model.PriceRange });
                            var brands = new Dictionary<string, string>() {
                                {"", "Tất cả thương hiệu"},
                                {"aoc", "AOC"},
                                {"asus", "ASUS"},
                                {"benq", "BenQ"},
                                {"dell", "Dell"},
                                {"lg", "LG"},
                                {"msi", "MSI"},
                                {"samsung", "Samsung"},
                                {"viewsonic", "ViewSonic"}
                            };
                        }
                        @foreach (var brand in brands)
                        {
                            var url = Url.Action("Monitor", "ProductsList", new { 
                                brand = brand.Key,
                                size = Model.Size,
                                resolution = Model.Resolution,
                                refreshRate = Model.RefreshRate,
                                priceRange = Model.PriceRange
                            });
                            <option value="@url" selected="@(Model.Brand == brand.Key)">@brand.Value</option>
                        }
                    </select>
                </div>

                <!-- Kích thước -->
                <div class="relative">
                    <select class="px-4 py-2 border rounded-md w-48" onchange="window.location.href=this.value">
                        @{
                            var sizes = new Dictionary<string, string>() {
                                {"", "Tất cả kích thước"},
                                {"24", "24 inch"},
                                {"27", "27 inch"},
                                {"32", "32 inch"},
                                {"34", "34 inch"}
                            };
                        }
                        @foreach (var size in sizes)
                        {
                            var url = Url.Action("Monitor", "ProductsList", new { 
                                size = size.Key,
                                brand = Model.Brand,
                                resolution = Model.Resolution,
                                refreshRate = Model.RefreshRate,
                                priceRange = Model.PriceRange
                            });
                            <option value="@url" selected="@(Model.Size == size.Key)">@size.Value</option>
                        }
                    </select>
                </div>

                <!-- Độ phân giải -->
                <div class="relative">
                    <select class="px-4 py-2 border rounded-md w-48" onchange="window.location.href=this.value">
                        @{
                            var resolutions = new Dictionary<string, string>() {
                                {"", "Tất cả độ phân giải"},
                                {"1080p", "1080p (Full HD)"},
                                {"1440p", "1440p (2K)"},
                                {"4k", "4K (Ultra HD)"}
                            };
                        }
                        @foreach (var resolution in resolutions)
                        {
                            var url = Url.Action("Monitor", "ProductsList", new { 
                                resolution = resolution.Key,
                                brand = Model.Brand,
                                size = Model.Size,
                                refreshRate = Model.RefreshRate,
                                priceRange = Model.PriceRange
                            });
                            <option value="@url" selected="@(Model.Resolution == resolution.Key)">@resolution.Value</option>
                        }
                    </select>
                </div>

                <!-- Tần số quét -->
                <div class="relative">
                    <select class="px-4 py-2 border rounded-md w-48" onchange="window.location.href=this.value">
                        @{
                            var refreshRates = new Dictionary<string, string>() {
                                {"", "Tất cả tần số quét"},
                                {"60", "60Hz"},
                                {"75", "75Hz"},
                                {"144", "144Hz"},
                                {"165", "165Hz"},
                                {"240", "240Hz"}
                            };
                        }
                        @foreach (var rate in refreshRates)
                        {
                            var url = Url.Action("Monitor", "ProductsList", new { 
                                refreshRate = rate.Key,
                                brand = Model.Brand,
                                size = Model.Size,
                                resolution = Model.Resolution,
                                priceRange = Model.PriceRange
                            });
                            <option value="@url" selected="@(Model.RefreshRate == rate.Key)">@rate.Value</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <!-- Price Range -->
        <div>
            <h2 class="font-semibold mb-2">Khoảng giá:</h2>
            <div class="flex flex-wrap gap-2">
                @{
                    var priceRanges = new Dictionary<string, string>() {
                        {"duoi-2-trieu", "Dưới 2 triệu"},
                        {"2-5-trieu", "2 - 5 triệu"},
                        {"5-10-trieu", "5 - 10 triệu"},
                        {"10-15-trieu", "10 - 15 triệu"},
                        {"tren-15-trieu", "Trên 15 triệu"}
                    };
                }
                @foreach (var range in priceRanges)
                {
                    var url = Url.Action("Monitor", "ProductsList", new { 
                        priceRange = range.Key,
                        brand = Model.Brand,
                        size = Model.Size,
                        resolution = Model.Resolution,
                        refreshRate = Model.RefreshRate
                    });
                    <a href="@url" 
                       class="px-4 py-2 bg-gray-100 rounded-md hover:bg-gray-200 @(Model.PriceRange == range.Key ? "bg-blue-600 text-white" : "")">
                        @range.Value
                    </a>
                }
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        @if (Model.Products != null && Model.Products.Any())
        {
            @foreach (var product in Model.Products)
            {
                <div class="bg-white rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300">
                    <a href="/monitor/@product.IdSp" class="block">
                        <div class="p-3">
                            <img src="@product.Hinhanh" alt="@product.Tensanpham" 
                                 class="w-full h-40 object-cover rounded-lg mb-3">
                            <div class="relative group">
                                <h3 class="text-base font-semibold mb-2 product-title overflow-hidden"
                                    data-full-text="@product.Tensanpham">
                                    @product.Tensanpham
                                </h3>
                                <div class="absolute left-0 -top-12 bg-black text-white text-xs rounded-lg px-2 py-1 opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-10 whitespace-nowrap product-tooltip">
                                    @product.Tensanpham
                                </div>
                            </div>
                            <p class="text-red-600 font-bold text-xl mb-4">@product.Gia.ToString("N0")đ</p>
                            <button class="w-full hover:opacity-80 transition-opacity duration-300">
                                <div class="flex items-center gap-2">
                                    <div class="bg-[#0066CC] p-2 rounded-full">
                                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                        </svg>
                                    </div>
                                    <span class="text-gray-700">Thêm vào giỏ hàng</span>
                                </div>
                            </button>
                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <div class="col-span-full text-center py-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-xl font-semibold text-gray-700 mb-2">Không tìm thấy sản phẩm</h3>
                    <p class="text-gray-500">Không có sản phẩm nào phù hợp với tiêu chí tìm kiếm của bạn.</p>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="mt-8 flex justify-center">
            <div class="flex space-x-2">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <a href="?page=@i" class="px-4 py-2 rounded @(Model.CurrentPage == i ? "bg-blue-500 text-white" : "bg-gray-200")">
                        @i
                    </a>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            function updateProductTitles() {
                const titles = document.querySelectorAll('.product-title');            
                titles.forEach((title, index) => {
                    const fullText = title.getAttribute('data-full-text');
                    
                    title.textContent = fullText;
                    
                    if (fullText && fullText.length > 70) {
                        const truncatedText = fullText.substring(0, 70) + '...';
                        title.textContent = truncatedText;
                    }
                    
                    const tooltip = title.closest('.group').querySelector('.product-tooltip');
                    tooltip.textContent = fullText;
                });
            }

            updateProductTitles();
            setTimeout(updateProductTitles, 500);
        });
    </script>
}

