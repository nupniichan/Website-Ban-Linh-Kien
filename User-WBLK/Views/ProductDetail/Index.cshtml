@model ProductDetailViewModel
@{
    ViewData["Title"] = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    // Add debug information
    System.Diagnostics.Debug.WriteLine($"Product ID: {Model.Id}");
    System.Diagnostics.Debug.WriteLine($"Product Category: {Model.Category}");
}

<div class="container mx-auto px-4 py-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <!-- Product Images -->
        <div class="space-y-4">
            <div class="bg-white p-4 rounded-lg shadow-md">
                @* Nào có data thì tui mở lại sau*@
                <img src="http://localhost:5177/@Model.ImageUrl" alt="@Model.Name" class="w-full h-auto rounded-lg">
                @* <img src="/imgs/products/cpu-amd.jpg" 
                     class="w-full h-[500px] object-contain rounded-lg" 
                     alt="@Model.Name"> *@
            </div>
            @if (Model.AdditionalImages?.Any() == true)
            {
                <div class="grid grid-cols-4 gap-4">
                    @foreach (var image in Model.AdditionalImages)
                    {
                        <div class="bg-white p-2 rounded-lg shadow-md hover:shadow-lg transition-shadow cursor-pointer">
                            <img src="@image" 
                                 class="w-full h-[100px] object-contain rounded-lg"
                                 alt="@Model.Name">
                        </div>
                    }
                </div>
            }
        </div>

        <!-- Product Info -->
        <div class="space-y-6">
            <div class="bg-white p-6 rounded-lg shadow-md">
                <div class="space-y-4">
                    <!-- Product Title -->
                    <h1 class="text-2xl md:text-3xl font-bold">@Model.Name</h1>

                    <!-- Product Info Grid -->
                    <div class="space-y-1">
                        <!-- Row 1 -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-600 whitespace-nowrap">Mã SP:</span>
                                <span class="text-[#007AFF] font-medium">@Model.ProductCode</span>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-600 whitespace-nowrap">Bảo hành:</span>
                                <span class="text-[#FF0000] font-medium">@Model.Warranty tháng</span>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-600 whitespace-nowrap">Tình trạng:</span>
                                <span class="text-[#FFB800] font-medium">@(Model.InStock ? "Còn hàng" : "Hết hàng")</span>
                            </div>
                        </div>

                        <!-- Row 2 -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-600 whitespace-nowrap">Số lượt xem:</span>
                                <span class="text-[#007AFF] font-medium">@Model.ViewCount</span>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-600 whitespace-nowrap">Đã mua:</span>
                                <span class="text-[#007AFF] font-medium">@Model.PurchaseCount</span>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-600 whitespace-nowrap">Đánh giá:</span>
                                <span class="text-[#007AFF] font-medium">@Model.TotalReviews</span>
                            </div>
                        </div>
                    </div>

                    <!-- Price -->
                    <div class="bg-gray-100 rounded-lg p-4">
                        <span class="text-3xl font-bold text-[#FF0000]">@Model.Price.ToString("N0")đ</span>
                    </div>

                    <!-- Quantity -->
                    <div class="flex items-center gap-4">
                        <span class="text-gray-600">Số lượng:</span>
                        <div class="flex border rounded">
                            <button onclick="decreaseQuantity()" 
                                    class="px-3 py-1 border-r hover:bg-gray-100 transition-colors">
                                -
                            </button>
                            <input type="number" 
                                   id="quantity"
                                   value="1" 
                                   min="1"
                                   max="@(Model.SoLuongTon * 0.2)" 
                                   onchange="validateQuantity(this)"
                                   class="w-16 text-center [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none" />
                            <button onclick="increaseQuantity()" 
                                    class="px-3 py-1 border-l hover:bg-gray-100 transition-colors">
                                +
                            </button>
                        </div>
                        <span id="quantityError" class="text-red-500 text-sm hidden"></span>
                    </div>

                    <!-- Action Buttons -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <button class="w-full px-4 py-3 border-2 border-[#007AFF] text-[#007AFF] rounded-lg hover:bg-blue-50 font-medium">
                            THÊM VÀO GIỎ
                        </button>
                        <button class="w-full px-4 py-3 bg-[#007AFF] text-white rounded-lg hover:bg-blue-600 font-medium">
                            MUA NGAY
                        </button>
                    </div>

                    <!-- Purchase Assurance -->
                    <div class="mt-6">
                        <h3 class="font-medium text-lg mb-4">Yên tâm mua hàng</h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div class="flex items-center gap-2">
                                <svg class="w-6 h-6 text-[#007AFF]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                <span>Cam kết giá tốt nhất thị trường</span>
                            </div>
                            <div class="flex items-center gap-2">
                                <svg class="w-6 h-6 text-[#007AFF]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                                </svg>
                                <span>Sản phẩm mới 100%</span>
                            </div>
                            <div class="flex items-center gap-2">
                                <svg class="w-6 h-6 text-[#007AFF]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                                </svg>
                                <span>Lỗi 1 đổi 1 ngay lập tức</span>
                            </div>
                            <div class="flex items-center gap-2">
                                <svg class="w-6 h-6 text-[#007AFF]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                                </svg>
                                <span>Bảo hành chính hãng</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Details Section -->
    <div class="mt-8">
        <div class="bg-white rounded-lg shadow-md">
            <!-- Tabs -->
            <div class="border-t border-gray-200">
                <div class="px-6">
                    <div class="border-b border-gray-200">
                        <nav class="-mb-px flex space-x-8" aria-label="Tabs">
                            <button onclick="switchTab('description')" 
                                    class="tab-btn border-blue-500 text-blue-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                                    id="descriptionTab">
                                Mô tả sản phẩm
                            </button>
                            <button onclick="switchTab('specs')" 
                                    class="tab-btn border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                                    id="specsTab">
                                Thông số kỹ thuật
                            </button>
                        </nav>
                    </div>
                </div>

                <!-- Tab contents -->
                <div class="p-6">
                    <!-- Description tab -->
                    <div id="description-tab" class="tab-content prose max-w-none">
                        @Html.Raw(Model.Description)
                    </div>

                    <!-- Specifications tab -->
                    <div id="specs-tab" class="tab-content hidden">
                        @if (Model.Specifications?.Any() == true)
                        {
                            <div class="border border-gray-300 rounded-lg overflow-hidden">
                                <table class="w-full">
                                    <thead class="bg-gray-50">
                                        <tr>
                                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b w-1/3">Thông số</th>
                                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b">Giá trị</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var spec in Model.Specifications)
                                        {
                                            <tr class="border-b hover:bg-gray-50">
                                                <td class="px-4 py-3 text-sm text-gray-600">@spec.Key</td>
                                                <td class="px-4 py-3 text-sm font-medium text-gray-900">@spec.Value</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p class="text-gray-500 italic">Chưa có thông số kỹ thuật cho sản phẩm này</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="mt-8">
        <h2 class="text-xl font-bold mb-4">Đánh giá & nhận xét (@Model.TotalReviews)</h2>
        <div class="bg-white rounded-lg border">
            <div class="flex flex-col sm:flex-row">
                <!-- Rating Summary -->
                <div class="text-center p-6 sm:border-r border-b sm:border-b-0 min-w-[200px] flex flex-col justify-center items-center">
                    <div class="text-[#007AFF] text-4xl font-bold mb-2">
                        @Model.AverageRating.ToString("0.0")/5
                    </div>
                    <div class="flex text-yellow-400 mb-2">
                        @for (var i = 1; i <= 5; i++)
                        {
                            if (i <= Math.Floor(Model.AverageRating))
                            {
                                <span>⭐</span>
                            }
                            else if (i - Model.AverageRating <= 0.5 && i - Model.AverageRating > 0)
                            {
                                <span>⭐</span>
                            }
                            else
                            {
                                <span class="text-gray-300">☆</span>
                            }
                        }
                    </div>
                    <div class="text-gray-500">@Model.TotalReviews đánh giá</div>

                    <!-- Rating Distribution -->
                    <div class="w-full mt-4 space-y-2">
                        @for (int i = 5; i >= 1; i--)
                        {
                            var count = Model.RatingDistribution[i];
                            var percentage = Model.TotalReviews > 0 ? (count * 100.0 / Model.TotalReviews) : 0;
                            <div class="flex items-center gap-2">
                                <span class="text-sm w-8">@i sao</span>
                                <div class="flex-1 h-2 bg-gray-200 rounded-full overflow-hidden">
                                    <div class="h-full bg-yellow-400 rounded-full" 
                                         style="width: @percentage%"></div>
                                </div>
                                <span class="text-sm text-gray-500 w-12">@count</span>
                            </div>
                        }
                    </div>
                </div>

                <!-- Reviews List -->
                <div class="flex-1 p-6">
                    @if (!Model.Reviews.Any())
                    {
                        <p class="text-gray-500 italic text-center">Chưa có đánh giá nào cho sản phẩm này</p>
                    }
                    else
                    {
                        <div id="reviewsList">
                            @foreach (var review in Model.Reviews.Take(4))
                            {
                                <div class="py-3 border-b last:border-0">
                                    <div class="flex items-center gap-2 mb-2">
                                        <span class="font-medium">@review.UserName</span>
                                        <span class="text-gray-400">•</span>
                                        <div class="flex text-yellow-400">
                                            @for (int i = 0; i < review.Rating; i++)
                                            {
                                                <span>⭐</span>
                                            }
                                        </div>
                                        <span class="text-gray-400">•</span>
                                        <span class="text-sm text-gray-500">@String.Format("{0:dd/MM/yyyy}", review.Date)</span>
                                    </div>
                                    <p class="text-gray-600">@review.Comment</p>
                                </div>
                            }
                        </div>
                        @if (Model.Reviews.Count > 4)
                        {
                            <div class="text-center mt-4">
                                <button id="showMoreBtn" 
                                        class="bg-blue-500 text-white px-6 py-1.5 rounded-lg hover:bg-blue-600 transition-colors text-sm"
                                        onclick="toggleReviews()">
                                    Xem thêm
                                </button>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Sản phẩm liên quan -->
    <div class="mt-8">
        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-bold">Sản phẩm liên quan</h2>
                <a href="/productslist/@Model.Category.ToLower()" 
                   class="text-blue-600 hover:text-blue-700 text-sm">
                    Xem tất cả
                </a>
            </div>

            <!-- Product Grid -->
            <div class="grid grid-cols-5 gap-6">
                @foreach (var product in Model.RelatedProducts.Take(5))
                {
                    <partial name="_ProductCard" model="product" />
                }
            </div>

            @if (!Model.RelatedProducts.Any())
            {
                <p class="text-gray-500 text-center py-4">Không có sản phẩm liên quan</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const thumbnails = document.querySelectorAll('.grid-cols-4 img');
            const mainImage = document.querySelector('.bg-white.p-4 img');

            thumbnails.forEach(thumb => {
                thumb.addEventListener('click', function() {
                    mainImage.src = this.src;
                });
            });
        });
        
        function switchTab(tabName) {
            // Ẩn tất cả tab content
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.add('hidden');
            });
            
            // Hiện tab được chọn
            document.getElementById(`${tabName}-tab`).classList.remove('hidden');
            
            // Cập nhật style cho các nút tab
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('border-blue-500', 'text-blue-600');
                btn.classList.add('border-transparent', 'text-gray-500');
            });
            
            // Style cho nút tab được chọn
            event.currentTarget.classList.remove('border-transparent', 'text-gray-500');
            event.currentTarget.classList.add('border-blue-500', 'text-blue-600');
        }

        let currentReviewCount = 4;
        const allReviews = @Json.Serialize(Model.Reviews);
        const showMoreBtn = document.getElementById('showMoreBtn');
        let isExpanded = false;
        
        function toggleReviews() {
            const reviewsList = document.getElementById('reviewsList');
            
            if (!isExpanded) {
                // Hiển thị thêm review
                const nextReviews = allReviews.slice(currentReviewCount, currentReviewCount + 4);
                
                nextReviews.forEach(review => {
                    const reviewElement = document.createElement('div');
                    reviewElement.className = 'py-2';
                    
                    const stars = '⭐'.repeat(review.rating);
                    reviewElement.innerHTML = `
                        <div class="flex flex-wrap items-center gap-1">
                            <span class="font-medium">${review.userName} - </span>
                            <div class="flex text-yellow-400">${stars}</div>
                        </div>
                        <p class="text-gray-600 mt-1">${review.comment}</p>
                    `;
                    
                    reviewsList.appendChild(reviewElement);
                });
                
                currentReviewCount += 4;
                
                // Nếu đã hiển thị hết review, đổi text thành "Ẩn bớt"
                if (currentReviewCount >= allReviews.length) {
                    showMoreBtn.textContent = 'Ẩn bớt';
                    isExpanded = true;
                }
            } else {
                // Ẩn bớt review, chỉ giữ lại 4 review đầu tiên
                const reviews = reviewsList.querySelectorAll('.py-2');
                for (let i = 4; i < reviews.length; i++) {
                    reviews[i].remove();
                }
                
                // Reset các biến
                currentReviewCount = 4;
                showMoreBtn.textContent = 'Xem thêm';
                isExpanded = false;
            }
        }

        const maxQuantity = @(Model.SoLuongTon * 0.2);
        const quantityInput = document.getElementById('quantity');
        const quantityError = document.getElementById('quantityError');

        function validateQuantity(input) {
            let value = parseInt(input.value);
            
            // Kiểm tra giá trị tối thiểu
            if (value < 1) {
                value = 1;
            }
            
            // Kiểm tra giá trị tối đa (20% số lượng tồn)
            if (value > maxQuantity) {
                value = Math.floor(maxQuantity);
                quantityError.textContent = `Số lượng tối đa có thể mua là ${value}`;
                quantityError.classList.remove('hidden');
            } else {
                quantityError.classList.add('hidden');
            }
            
            input.value = value;
        }

        function increaseQuantity() {
            let currentValue = parseInt(quantityInput.value);
            if (currentValue < maxQuantity) {
                quantityInput.value = currentValue + 1;
                validateQuantity(quantityInput);
            }
        }

        function decreaseQuantity() {
            let currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
                validateQuantity(quantityInput);
            }
        }

        // Validate khi load trang
        document.addEventListener('DOMContentLoaded', function() {
            validateQuantity(quantityInput);
        });
    </script>
}
