@model Admin_WBLK.Models.Sanpham

<script src="~/js/ProductManagement.js"></script>

@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm";
}

<div class="p-6 w-full h-full bg-gray-50">
    <div class="max-w-7xl mx-auto">
        <!-- Header -->
        <div class="mb-6">
            <h1 class="text-3xl font-bold text-gray-900">Chỉnh sửa sản phẩm</h1>
            <p class="mt-2 text-sm text-gray-600">Cập nhật thông tin chi tiết sản phẩm</p>
        </div>

        <!-- Card chứa form -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
            <form id="productForm" 
                  asp-action="Edit" 
                  method="post" 
                  enctype="multipart/form-data" 
                  class="w-full h-full">
                <input type="hidden" name="thongsokythuat" />
                <input type="hidden" asp-for="IdSp" />
                <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />
                <div asp-validation-summary="ModelOnly" class="mb-4 p-4 rounded-lg bg-red-50 text-red-500"></div>

                <!-- Grid layout cho các trường input -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Tên sản phẩm - full width -->
                    <div class="md:col-span-2">
                        <label asp-for="Tensanpham" class="block text-sm font-medium text-gray-700 mb-1">Tên sản phẩm</label>
                        <input asp-for="Tensanpham" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                        <span asp-validation-for="Tensanpham" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Giá -->
                    <div>
                        <label asp-for="Gia" class="block text-sm font-medium text-gray-700 mb-1">Giá</label>
                        <div class="relative">
                            <input asp-for="Gia" type="number" class="w-full pl-4 pr-12 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                            <span class="absolute right-4 top-2 text-gray-500">VNĐ</span>
                        </div>
                        <span asp-validation-for="Gia" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Số lượng tồn -->
                    <div>
                        <label asp-for="Soluongton" class="block text-sm font-medium text-gray-700 mb-1">Số lượng tồn</label>
                        <input asp-for="Soluongton" type="number" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                        <span asp-validation-for="Soluongton" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Loại sản phẩm -->
                    <div>
                        <label asp-for="Loaisanpham" class="block text-sm font-medium text-gray-700 mb-1">Loại sản phẩm</label>
                        <select asp-for="Loaisanpham"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-100 cursor-not-allowed" 
                                disabled>
                            <option value="">Chọn loại sản phẩm</option>
                            <option value="PC">PC</option>
                            <option value="Laptop">Laptop</option>
                            <option value="Components">Linh kiện máy tính</option>
                            <option value="Monitor">Màn hình</option>
                            <option value="Audio">Thiết bị âm thanh</option>
                            <option value="Network">Thiết bị mạng</option>
                            <option value="Peripherals">Thiết bị ngoại vi</option>
                            <option value="Storage">Thiết bị lưu trữ</option>
                        </select>
                        <input type="hidden" asp-for="Loaisanpham" />
                        <span asp-validation-for="Loaisanpham" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Thương hiệu -->
                    <div>
                        <label asp-for="Thuonghieu" class="block text-sm font-medium text-gray-700 mb-1">Thương hiệu</label>
                        <input asp-for="Thuonghieu" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                        <span asp-validation-for="Thuonghieu" class="text-red-500 text-sm mt-1"></span>
                    </div>
                </div>

                <!-- Hình ảnh -->
                <div class="mt-6">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Hình ảnh sản phẩm</label>
                    <div class="flex items-start gap-6">
                        <!-- Preview hình ảnh -->
                        <div class="w-48 h-48 border border-gray-300 rounded-lg overflow-hidden bg-gray-50">
                            <img id="currentImage" src="@Model.Hinhanh" alt="Hình ảnh sản phẩm" 
                                 class="w-full h-full object-contain" />
                        </div>
                        
                        <!-- Upload section -->
                        <div class="flex-1">
                            <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-blue-500 transition-colors"
                                 ondrop="dropHandler(event)" 
                                 ondragover="dragOverHandler(event)"
                                 ondragleave="dragLeaveHandler(event)">
                                <input type="file" id="imageFile" name="imageFile" accept="image/*" 
                                       class="w-full"
                                       onchange="previewImage(this)" />
                                <input type="hidden" asp-for="Hinhanh" />
                                <p class="mt-2 text-sm text-gray-500">
                                    Kéo thả hoặc click để chọn hình ảnh. Kích thước tối đa 5MB.
                                </p>
                            </div>
                            <div id="imageError" class="text-red-500 text-sm mt-2"></div>
                        </div>
                    </div>
                </div>

                <!-- Mô tả -->
                <div class="mt-6">
                    <label asp-for="Mota" class="block text-sm font-medium text-gray-700 mb-2">Mô tả</label>
                    <div class="border border-gray-300 rounded-lg overflow-hidden">
                        <!-- Thanh công cụ định dạng -->
                        <div class="flex flex-wrap gap-1 p-2 bg-gray-50 border-b border-gray-300">
                            <div class="flex gap-1 items-center">
                                <button type="button" onclick="formatText('bold')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="In đậm">
                                    <i class="fas fa-bold text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('italic')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="In nghiêng">
                                    <i class="fas fa-italic text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('strikethrough')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Gạch ngang">
                                    <i class="fas fa-strikethrough text-gray-700"></i>
                                </button>
                                <div class="w-px bg-gray-300 mx-1"></div>
                                <button type="button" onclick="formatText('justifyLeft')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Căn trái">
                                    <i class="fas fa-align-left text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('justifyCenter')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Căn giữa">
                                    <i class="fas fa-align-center text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('justifyRight')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Căn phải">
                                    <i class="fas fa-align-right text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('lineHeight')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Giãn dòng">
                                    <i class="fas fa-text-height text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('insertorderedlist')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Danh sách số">
                                    <i class="fas fa-list-ol text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('insertunorderedlist')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Danh sách">
                                    <i class="fas fa-list-ul text-gray-700"></i>
                                </button>
                            </div>
                        </div>
                        <div contenteditable="true" id="moTaEditor" class="min-h-[250px] p-4 focus:outline-none"></div>
                        <textarea asp-for="Mota" class="hidden"></textarea>
                    </div>
                    <span asp-validation-for="Mota" class="text-red-500 text-sm mt-1"></span>
                </div>

                <!-- Thông số kỹ thuật -->
                <div class="mt-6">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Thông số kỹ thuật</label>
                    <div class="border border-gray-300 rounded-lg overflow-hidden">
                        <table class="w-full" id="specTable">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b w-1/3">Thông số</th>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b">Giá trị</th>
                                    <th class="px-4 py-3 w-16 border-b"></th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Sẽ được điền bởi JavaScript -->
                            </tbody>
                        </table>
                        <div class="p-4 bg-gray-50 border-t border-gray-300">
                            <button type="button" onclick="addRow()" 
                                    class="flex items-center text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                </svg>
                                Thêm thông số
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="mt-8 flex items-center justify-end gap-4">
                    @if (!string.IsNullOrEmpty(ViewData["ReturnUrl"]?.ToString()))
                    {
                        <a href="@ViewData["ReturnUrl"]" 
                           class="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-800 transition-colors">
                            Quay lại
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" 
                           class="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-800 transition-colors">
                            Quay lại
                        </a>
                    }
                    <button type="submit" class="px-6 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors">
                        Lưu thay đổi
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    
    <script>
        // Khai báo biến toàn cục
        const editor = document.getElementById('moTaEditor');
        let isResizing = false;

        // Thêm định nghĩa needOptions
        const needOptions = ['Gaming', 'Graphics', 'Workstation', 'Office', 'Server'];

        // Định nghĩa mapping cho các danh mục
        const categoryMapping = {
            'Components': ['CPU', 'VGA', 'Mainboard', 'RAM', 'PSU', 'Case'],
            'Audio': ['Speaker', 'Microphone'],
            'Network': ['Router Wifi', 'Wifi Card'],
            'Peripherals': ['Keyboard', 'Mouse', 'Headphone', 'Webcam'],
            'Storage': ['SSD', 'HDD']
        };

        // Copy toàn bộ componentSpecs từ Create.cshtml
        const componentSpecs = {
            'CPU': [
                { key: 'Socket', value: '' },
                { key: 'Dòng CPU', value: '' },
                { key: 'Số nhân', value: '' },
                { key: 'Số luồng', value: '' },
                { key: 'Xung nhịp', value: '' },
                { key: 'Xung nhịp cơ bản', value: '' },
                { key: 'Điện năng tiêu thụ', value: '' },
                { key: 'Bộ nhớ đệm', value: '' },
                { key: 'Nhân đồ hoạ tích hợp', value: '' }
            ],
            // ... copy các components khác
        };

        // Copy toàn bộ categorySpecs từ Create.cshtml
        const categorySpecs = {
            // ... copy từ Create.cshtml
        };

        // Copy toàn bộ defaultSpecsMapping từ Create.cshtml
        const defaultSpecsMapping = {
            'PC': [
                { key: 'Nhu cầu', value: '', type: 'select', options: needOptions },
                { key: 'Mainboard', value: '' },
                // ... copy các thông số khác
            ],
            // ... copy các loại sản phẩm khác
        };

        document.addEventListener('DOMContentLoaded', function() {
            const loaiSpSelect = document.querySelector('select[name="Loaisanpham"]');
            const specificationSection = document.getElementById('specificationSection');
            const addSpecButton = document.querySelector('.p-4.bg-gray-50.border-t.border-gray-300');
            
            // Khôi phục thông số kỹ thuật từ dữ liệu đã lưu
            try {
                const thongSoKyThuat = @Html.Raw(Json.Serialize(Model.Thongsokythuat));
                if (thongSoKyThuat) {
                    let specs;
                    if (typeof thongSoKyThuat === 'string') {
                        specs = JSON.parse(thongSoKyThuat);
                    } else {
                        specs = thongSoKyThuat;
                    }

                    const tbody = document.querySelector('#specTable tbody');
                    tbody.innerHTML = '';

                    // Lấy loại sản phẩm hiện tại
                    const currentProductType = document.querySelector('select[name="Loaisanpham"]').value;
                    const defaultSpecs = defaultSpecsMapping[currentProductType] || [];
                    const defaultSpecKeys = defaultSpecs.map(spec => spec.key);

                    // Thêm các thông số từ dữ liệu
                    Object.entries(specs).forEach(([key, value], index) => {
                        const row = document.createElement('tr');
                        row.className = 'border';
                        
                        const inputClass = "w-full px-2 py-1 border-0 focus:outline-none focus:ring-0";
                        const isDefaultSpec = defaultSpecKeys.includes(key) || key === 'Danh mục';
                        const isDanhMuc = key === 'Danh mục';
                        
                        row.innerHTML = `
                            <td class="px-4 py-2 border">
                                <input type="text" 
                                       name="specs[${index}].key" 
                                       value="${key}"
                                       class="${inputClass} ${isDefaultSpec ? 'bg-gray-100' : ''}"
                                       placeholder="Tên thông số"
                                       ${isDefaultSpec ? 'readonly' : ''}>
                            </td>
                            <td class="px-4 py-2 border">
                                <input type="text" 
                                       name="specs[${index}].value" 
                                       value="${value}"
                                       class="${inputClass} ${isDanhMuc ? 'bg-gray-100' : ''}"
                                       placeholder="Giá trị"
                                       ${isDanhMuc ? 'readonly' : ''}
                                       required>
                            </td>
                            <td class="px-4 py-2 border text-center">
                                ${!isDefaultSpec ? `
                                    <button type="button" onclick="removeRow(this)" 
                                            class="text-red-500 hover:text-red-700 transition-colors">
                                        <i class="fas fa-times"></i>
                                    </button>
                                ` : ''}
                            </td>
                        `;
                        tbody.appendChild(row);
                    });
                }
            } catch (e) {
                console.error('Lỗi khi parse thông số kỹ thuật:', e);
            }

            // Khôi phục nội dung mô tả
            const moTaEditor = document.getElementById('moTaEditor');
            const moTaInput = document.querySelector('textarea[name="Mota"]');
            if (moTaEditor && moTaInput) {
                moTaEditor.innerHTML = moTaInput.value || '';
                
                moTaEditor.addEventListener('input', function() {
                    moTaInput.value = this.innerHTML;
                });
            }

            // Xử lý sự kiện thay đổi loại sản phẩm
            if (loaiSpSelect) {
                loaiSpSelect.addEventListener('change', function(e) {
                    // ... copy toàn bộ xử lý sự kiện từ Create.cshtml ...
                });
            }
        });

        // Copy toàn bộ các hàm xử lý từ Create.cshtml
        function handleCategoryChange(category, productType) {
            // ... copy từ Create.cshtml ...
        }

        function handleComponentChange(category) {
            // ... copy từ Create.cshtml ...
        }

        // ... copy các hàm khác từ Create.cshtml ...

        // Thêm các hàm xử lý định dạng
        function formatText(command, value = null) {
            const editor = document.getElementById('moTaEditor');
            const moTaInput = document.querySelector('textarea[name="Mota"]');
            
            editor.focus();
            
            switch(command) {
                case 'lineHeight':
                    const currentValue = getComputedStyle(editor).lineHeight;
                    const newValue = prompt('Nhập khoảng cách dòng (VD: 1.5):', currentValue === 'normal' ? '1' : currentValue);
                    if (newValue && !isNaN(newValue)) {
                        editor.style.lineHeight = newValue;
                    }
                    break;
                    
                case 'fontSize':
                    const sizes = {
                        '1': '12px',
                        '3': '16px',
                        '5': '20px',
                        '7': '24px'
                    };
                    document.execCommand(command, false, value);
                    break;
                    
                case 'fontName':
                    document.execCommand(command, false, value);
                    break;
                    
                default:
                    document.execCommand(command, false, value);
            }
            
            // Cập nhật nội dung vào textarea
            moTaInput.value = editor.innerHTML;
        }

    </script>
}
