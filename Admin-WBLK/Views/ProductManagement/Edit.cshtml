@model Admin_WBLK.Models.Sanpham

<script src="~/js/ProductManagement.js"></script>

@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm";
}

<div class="p-6 w-full h-full bg-gray-50">
    <div class="max-w-7xl mx-auto">
        <!-- Header -->
        <div class="mb-6">
            <h1 class="text-3xl font-bold text-gray-900">Chỉnh sửa sản phẩm</h1>
            <p class="mt-2 text-sm text-gray-600">Cập nhật thông tin chi tiết sản phẩm</p>
        </div>

        <!-- Card chứa form -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
            <form id="productForm" 
                  asp-action="Edit" 
                  method="post" 
                  enctype="multipart/form-data" 
                  class="w-full h-full">
                <input type="hidden" name="thongsokythuat" />
                <input type="hidden" asp-for="IdSp" />
                <div asp-validation-summary="ModelOnly" class="mb-4 p-4 rounded-lg bg-red-50 text-red-500"></div>

                <!-- Grid layout cho các trường input -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Tên sản phẩm - full width -->
                    <div class="md:col-span-2">
                        <label asp-for="Tensanpham" class="block text-sm font-medium text-gray-700 mb-1">Tên sản phẩm</label>
                        <input asp-for="Tensanpham" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                        <span asp-validation-for="Tensanpham" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Giá -->
                    <div>
                        <label asp-for="Gia" class="block text-sm font-medium text-gray-700 mb-1">Giá</label>
                        <div class="relative">
                            <input asp-for="Gia" type="number" class="w-full pl-4 pr-12 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                            <span class="absolute right-4 top-2 text-gray-500">VNĐ</span>
                        </div>
                        <span asp-validation-for="Gia" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Số lượng tồn -->
                    <div>
                        <label asp-for="Soluongton" class="block text-sm font-medium text-gray-700 mb-1">Số lượng tồn</label>
                        <input asp-for="Soluongton" type="number" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                        <span asp-validation-for="Soluongton" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Loại sản phẩm -->
                    <div>
                        <label asp-for="Loaisanpham" class="block text-sm font-medium text-gray-700 mb-1">Loại sản phẩm</label>
                        <select asp-for="Loaisanpham"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                                required>
                            <option value="">Chọn loại sản phẩm</option>
                            <option value="PC">PC</option>
                            <option value="Laptop">Laptop</option>
                            <option value="Components">Linh kiện máy tính</option>
                            <option value="Monitor">Màn hình</option>
                            <option value="Audio">Thiết bị âm thanh</option>
                            <option value="Network">Thiết bị mạng</option>
                            <option value="Peripherals">Thiết bị ngoại vi</option>
                            <option value="Storage">Thiết bị lưu trữ</option>
                        </select>
                        <span asp-validation-for="Loaisanpham" class="text-red-500 text-sm mt-1"></span>
                    </div>

                    <!-- Thương hiệu -->
                    <div>
                        <label asp-for="Thuonghieu" class="block text-sm font-medium text-gray-700 mb-1">Thương hiệu</label>
                        <input asp-for="Thuonghieu" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" required />
                        <span asp-validation-for="Thuonghieu" class="text-red-500 text-sm mt-1"></span>
                    </div>
                </div>

                <!-- Hình ảnh -->
                <div class="mt-6">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Hình ảnh sản phẩm</label>
                    <div class="flex items-start gap-6">
                        <!-- Preview hình ảnh -->
                        <div class="w-48 h-48 border border-gray-300 rounded-lg overflow-hidden bg-gray-50">
                            <img id="currentImage" src="@Model.Hinhanh" alt="Hình ảnh sản phẩm" 
                                 class="w-full h-full object-contain" />
                        </div>
                        
                        <!-- Upload section -->
                        <div class="flex-1">
                            <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-blue-500 transition-colors"
                                 ondrop="dropHandler(event)" 
                                 ondragover="dragOverHandler(event)"
                                 ondragleave="dragLeaveHandler(event)">
                                <input type="file" id="imageFile" name="imageFile" accept="image/*" 
                                       class="w-full"
                                       onchange="previewImage(this)" />
                                <input type="hidden" asp-for="Hinhanh" />
                                <p class="mt-2 text-sm text-gray-500">
                                    Kéo thả hoặc click để chọn hình ảnh. Kích thước tối đa 5MB.
                                </p>
                            </div>
                            <div id="imageError" class="text-red-500 text-sm mt-2"></div>
                        </div>
                    </div>
                </div>

                <!-- Mô tả -->
                <div class="mt-6">
                    <label asp-for="Mota" class="block text-sm font-medium text-gray-700 mb-2">Mô tả</label>
                    <div class="border border-gray-300 rounded-lg overflow-hidden">
                        <!-- Thanh công cụ định dạng -->
                        <div class="flex flex-wrap gap-1 p-2 bg-gray-50 border-b border-gray-300">
                            <div class="flex gap-1 items-center">
                                <button type="button" onclick="formatText('bold')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="In đậm">
                                    <i class="fas fa-bold text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('italic')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="In nghiêng">
                                    <i class="fas fa-italic text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('strikethrough')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Gạch ngang">
                                    <i class="fas fa-strikethrough text-gray-700"></i>
                                </button>
                                <div class="w-px bg-gray-300 mx-1"></div>
                                <button type="button" onclick="formatText('justifyLeft')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Căn trái">
                                    <i class="fas fa-align-left text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('justifyCenter')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Căn giữa">
                                    <i class="fas fa-align-center text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('justifyRight')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Căn phải">
                                    <i class="fas fa-align-right text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('lineHeight')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Giãn dòng">
                                    <i class="fas fa-text-height text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('insertorderedlist')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Danh sách số">
                                    <i class="fas fa-list-ol text-gray-700"></i>
                                </button>
                                <button type="button" onclick="formatText('insertunorderedlist')" class="p-1.5 hover:bg-gray-200 rounded transition-colors" title="Danh sách">
                                    <i class="fas fa-list-ul text-gray-700"></i>
                                </button>
                            </div>
                        </div>
                        <div contenteditable="true" id="moTaEditor" class="min-h-[250px] p-4 focus:outline-none"></div>
                        <textarea asp-for="Mota" class="hidden"></textarea>
                    </div>
                    <span asp-validation-for="Mota" class="text-red-500 text-sm mt-1"></span>
                </div>

                <!-- Thông số kỹ thuật -->
                <div class="mt-6">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Thông số kỹ thuật</label>
                    <div class="border border-gray-300 rounded-lg overflow-hidden">
                        <table class="w-full" id="specTable">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b w-1/3">Thông số</th>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b">Giá trị</th>
                                    <th class="px-4 py-3 w-16 border-b"></th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Sẽ được điền bởi JavaScript -->
                            </tbody>
                        </table>
                        <div class="p-4 bg-gray-50 border-t border-gray-300">
                            <button type="button" onclick="addRow()" 
                                    class="flex items-center text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                </svg>
                                Thêm thông số
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="mt-8 flex items-center justify-end gap-4">
                    <a asp-action="Index" class="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-800 transition-colors">
                        Quay lại
                    </a>
                    <button type="submit" class="px-6 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors">
                        Lưu thay đổi
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    
    <script>
        // Định nghĩa mapping cho các danh mục
        const categoryMapping = {
            'Components': ['CPU', 'VGA', 'Mainboard', 'RAM', 'PSU', 'Case'],
            'Audio': ['Speaker', 'Microphone'],
            'Network': ['Router Wifi', 'Wifi Card'],
            'Peripherals': ['Keyboard', 'Mouse', 'Headphone'],
            'Storage': ['SSD', 'HDD']
        };

        // Định nghĩa mapping cho thông số mặc định
        const defaultSpecsMapping = {
            'PC': [
                { key: 'Danh mục', value: '' },
                { key: 'Model', value: '' },
                { key: 'Bảo hành', value: '' }
            ],
            'Laptop': [
                { key: 'Danh mục', value: '' },
                { key: 'Model', value: '' },
                { key: 'Bảo hành', value: '' }
            ],
            'Components': [
                { key: 'Danh mục', value: '' },
                { key: 'Model', value: '' },
                { key: 'Bảo hành', value: '' }
            ],
            'Monitor': [
                { key: 'Kích thước', value: '' },
                { key: 'Độ phân giải', value: '' },
                { key: 'Tần số quét', value: '' },
                { key: 'Bảo hành', value: '' }
            ],
            'Audio': [
                { key: 'Danh mục', value: '' },
                { key: 'Model', value: '' },
                { key: 'Bảo hành', value: '' }
            ],
            'Network': [
                { key: 'Danh mục', value: '' },
                { key: 'Model', value: '' },
                { key: 'Bảo hành', value: '' }
            ],
            'Peripherals': [
                { key: 'Danh mục', value: '' },
                { key: 'Model', value: '' },
                { key: 'Bảo hành', value: '' }
            ],
            'Storage': [
                { key: 'Danh mục', value: '' },
                { key: 'Dung lượng', value: '' },
                { key: 'Bảo hành', value: '' }
            ]
        };

        document.addEventListener('DOMContentLoaded', function() {
            const loaiSpSelect = document.querySelector('select[name="loaisanpham"]');
            
            if (loaiSpSelect) {
                // Hiển thị section thông số kỹ thuật nếu đã có loại sản phẩm được chọn
                if (loaiSpSelect.value) {
                    document.getElementById('specificationSection').style.display = 'block';
                }

                loaiSpSelect.addEventListener('change', function(e) {
                    const productType = e.target.value;
                    const specificationSection = document.getElementById('specificationSection');
                    
                    if (!productType) {
                        specificationSection.style.display = 'none';
                        return;
                    }

                    specificationSection.style.display = 'block';
                    const tbody = document.querySelector('#specTable tbody');
                    tbody.innerHTML = '';
                    
                    if (defaultSpecsMapping[productType]) {
                        defaultSpecsMapping[productType].forEach((spec, index) => {
                            const row = document.createElement('tr');
                            row.className = 'border';
                            
                            const isCategory = spec.key === 'Danh mục';
                            const inputClass = "w-full px-2 py-1 border-0 focus:outline-none focus:ring-0";
                            
                            let valueCell;
                            if (isCategory && categoryMapping[productType]) {
                                valueCell = `
                                    <select name="specs[${index}].value" 
                                            class="${inputClass} bg-white"
                                            required>
                                        <option value="">Chọn danh mục</option>
                                        ${categoryMapping[productType]
                                            .map(cat => `<option value="${cat}">${cat}</option>`)
                                            .join('')}
                                    </select>`;
                            } else {
                                valueCell = `
                                    <input type="text" 
                                           name="specs[${index}].value" 
                                           value="${spec.value}"
                                           class="${inputClass}"
                                           placeholder="Giá trị">`;
                            }
                            
                            row.innerHTML = `
                                <td class="px-4 py-2 border">
                                    <input type="text" 
                                           name="specs[${index}].key" 
                                           value="${spec.key}" 
                                           class="${inputClass}"
                                           ${isCategory ? 'readonly' : ''}>
                                </td>
                                <td class="px-4 py-2 border">
                                    ${valueCell}
                                </td>
                                <td class="px-4 py-2 border text-center">
                                    ${!isCategory ? `
                                        <button type="button" onclick="removeRow(this)" class="text-red-500 hover:text-red-700">
                                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                            </svg>
                                        </button>
                                    ` : ''}
                                </td>
                            `;
                            tbody.appendChild(row);
                        });
                    }
                });
            }

            // Khôi phục thông số kỹ thuật từ dữ liệu đã lưu
            try {
                const thongSoKyThuat = @Html.Raw(Json.Serialize(Model.Thongsokythuat));
                if (thongSoKyThuat) {
                    let specs;
                    if (typeof thongSoKyThuat === 'string') {
                        specs = JSON.parse(thongSoKyThuat);
                    } else {
                        specs = thongSoKyThuat;
                    }

                    // Xóa các hàng hiện tại
                    const tbody = document.querySelector('#specTable tbody');
                    tbody.innerHTML = '';

                    // Thêm các thông số từ dữ liệu
                    Object.entries(specs).forEach(([key, value], index) => {
                        const row = document.createElement('tr');
                        row.className = 'border';
                        
                        const inputClass = "w-full px-2 py-1 border-0 focus:outline-none focus:ring-0";
                        
                        row.innerHTML = `
                            <td class="px-4 py-2 border">
                                <input type="text" 
                                       name="specs[${index}].key" 
                                       value="${key}"
                                       class="${inputClass}"
                                       placeholder="Tên thông số">
                            </td>
                            <td class="px-4 py-2 border">
                                <input type="text" 
                                       name="specs[${index}].value" 
                                       value="${value}"
                                       class="${inputClass}"
                                       placeholder="Giá trị">
                            </td>
                            <td class="px-4 py-2 border text-center">
                                <button type="button" onclick="removeRow(this)" class="text-red-500 hover:text-red-700">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>
                            </td>
                        `;
                        tbody.appendChild(row);
                    });
                }
            } catch (e) {
                console.error('Lỗi khi parse thông số kỹ thuật:', e);
                console.error('Dữ liệu gốc:', @Html.Raw(Json.Serialize(Model.Thongsokythuat)));
            }

            // Khôi phục nội dung mô tả
            const moTaEditor = document.getElementById('moTaEditor');
            const moTaInput = document.querySelector('textarea[name="Mota"]');
            if (moTaEditor && moTaInput) {
                const decodedMota = @Html.Raw(Json.Serialize(Model.Mota));
                moTaEditor.innerHTML = decodedMota || '';
                
                // Cập nhật textarea ẩn khi nội dung editor thay đổi
                moTaEditor.addEventListener('input', function() {
                    moTaInput.value = this.innerHTML;
                });
            }
        });

        // Thêm các hàm từ Create.cshtml
        function isDuplicateKey(key, currentRow) {
            const allKeys = document.querySelectorAll('#specTable tbody tr input[name$="].key"]');
            for (let input of allKeys) {
                if (input !== currentRow && input.value.toLowerCase() === key.toLowerCase()) {
                    return true;
                }
            }
            return false;
        }

        function validateKey(input) {
            const errorDiv = input.parentElement.querySelector('div.text-red-500');
            const key = input.value.trim();
            
            if (isDuplicateKey(key, input)) {
                errorDiv.textContent = 'Thông số này đã tồn tại';
                input.classList.add('border-red-500');
                return false;
            } else {
                errorDiv.textContent = '';
                input.classList.remove('border-red-500');
                return true;
            }
        }

        // Các hàm khác giữ nguyên như cũ
        function formatText(command, value = null) {
            if (command === 'lineHeight') {
                const currentValue = getComputedStyle(document.getElementById('moTaEditor')).lineHeight;
                const newValue = prompt('Nhập khoảng cách dòng (VD: 1.5):', currentValue === 'normal' ? '1' : currentValue);
                if (newValue && !isNaN(newValue)) {
                    document.getElementById('moTaEditor').style.lineHeight = newValue;
                }
            } else {
                document.execCommand(command, false, value);
            }
            document.getElementById('moTaEditor').focus();
        }

        function insertLink() {
            const url = prompt('Nhập URL:');
            if (url) {
                document.execCommand('createLink', false, url);
            }
        }

        function insertTable() {
            document.execCommand('insertTable');
        }

        function insertCode() {
            document.execCommand('insertCode');
        }

        function previewImage(input) {
            const currentImage = document.getElementById('currentImage');
            const imageError = document.getElementById('imageError');
            
            if (input.files && input.files[0]) {
                const file = input.files[0];
                
                // Kiểm tra kích thước file (giới hạn 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    imageError.textContent = 'Kích thước file không được vượt quá 5MB';
                    input.value = '';
                    return;
                }
                
                // Kiểm tra loại file
                if (!file.type.startsWith('image/')) {
                    imageError.textContent = 'Vui lòng chọn file hình ảnh';
                    input.value = '';
                    return;
                }
                
                // Preview hình ảnh
                const reader = new FileReader();
                reader.onload = function(e) {
                    currentImage.src = e.target.result;
                    imageError.textContent = '';
                };
                reader.readAsDataURL(file);
            }
        }

        // Thêm vào phần script
        function dragOverHandler(ev) {
            ev.preventDefault();
            ev.currentTarget.classList.add('border-blue-500');
            ev.currentTarget.classList.add('bg-blue-50');
        }

        function dragLeaveHandler(ev) {
            ev.currentTarget.classList.remove('border-blue-500');
            ev.currentTarget.classList.remove('bg-blue-50');
        }

        function dropHandler(ev) {
            ev.preventDefault();
            ev.currentTarget.classList.remove('border-blue-500');
            ev.currentTarget.classList.remove('bg-blue-50');

            if (ev.dataTransfer.items) {
                const file = ev.dataTransfer.items[0].getAsFile();
                if (file) {
                    const input = document.getElementById('imageFile');
                    const container = new DataTransfer();
                    container.items.add(file);
                    input.files = container.files;
                    previewImage(input);
                }
            }
        }

        function addRow() {
            const tbody = document.querySelector('#specTable tbody');
            const rowCount = tbody.children.length;
            const row = document.createElement('tr');
            row.className = 'border';
            
            const inputClass = "w-full px-2 py-1 border-0 focus:outline-none focus:ring-0";
            
            row.innerHTML = `
                <td class="px-4 py-2 border">
                    <input type="text" 
                           name="specs[${rowCount}].key" 
                           class="${inputClass}"
                           placeholder="Tên thông số">
                </td>
                <td class="px-4 py-2 border">
                    <input type="text" 
                           name="specs[${rowCount}].value" 
                           class="${inputClass}"
                           placeholder="Giá trị">
                </td>
                <td class="px-4 py-2 border text-center">
                    <button type="button" onclick="removeRow(this)" class="text-red-500 hover:text-red-700">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                        </svg>
                    </button>
                </td>
            `;
            tbody.appendChild(row);
        }

        function removeRow(button) {
            button.closest('tr').remove();
        }
    </script>
    
}
